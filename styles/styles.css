*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    /* font-family: 'Dosis', sans-serif; */
    font-family: 'Inter', sans-serif;
    list-style: none;
    text-decoration: none;
    scroll-behavior: smooth;
    /* border: none;
    outline: none; */
}
:root{
    --bg-color:#191919;
    --secont-bg-color:#101010;
    --main-color:#e9204f;
    --text-color:#fff;
    --second-color:#e4e4e4;
    --other-color:#c6c9d8bf;

    --h1-font:7rem;
    --h2-font:3.5rem;
    --p-font: 1.1rem
}

body{
    color: var(--text-color);
    background: var(--bg-color);
}

header{
    position: fixed;
    top: 0;
    right: 0;
    z-index: 1000;
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: transparent;
    padding-top: 28px;
    padding-bottom: 28px;
    padding-left: 5%;
    padding-right: 11%;
    border-bottom: 1px solid transparent;
    transition: all .55s;

}

.logo img{
    width: 100%;
    height: auto;
}

.navlist{
    display: flex;
    gap: 40px;
}

.navlist a{
    color: var(--second-color);
    font-size: var(--p-font);
    font-weight: 600;
    transition: all .50s;

}

.navlist a:hover{
    color: var(--main-color);
    
}

box-icon#menu.menu{
    display: none;
    cursor: pointer;
}

section{
    padding: 120px 19% 100px;

}

.home{
    position: relative;
    min-height: 100vh;
    width: 100%;
    background: url(/img/background.jpg);
    background-size: cover;
    background-position: center;
    display: flex;
    align-items: center;
    justify-content: flex-start;

}


.hero-text h3{
    color: var(--second-color);
    font-size: 22px;
    font-weight: 600;
    margin-bottom: 15px;
    word-spacing: 10px;
}

.hero-text h1{
    font-family: 'Dosis', sans-serif;
    font-size: var(--h1-font);
    color: var(--text-color);
    font-weight: 800;
    margin-bottom: 20px;
    letter-spacing: 2px;
}

.hero-text h4{
    color: var(--second-color);
    font-size: 25px;
    font-weight: 600;
    word-spacing: 15px;
    margin-bottom: 3.5rem;
}

.btn{
    display: inline-block;
    padding: 16px 45px;
    background: var(--main-color);
    color: var(--text-color);
    font-size: var(--p-font);
    font-weight: 600;
    border: 2px solid var(--main-color);
    transition: all .55s;
}

.btn:hover{
    transform:translateX(5px);
    background: transparent;
}

header.sticky{
    padding: 15px 11%;
    background: #000;
    border-bottom: 1px solid white;
}

.about{
    display: grid;
    grid-template-columns: repeat(auto-fit,minmax(200px,auto));
    align-items: center;
    gap: 4rem;

}

.about-img img{
    height: auto;
    width: 100%;
}

.about-text h2{
    font-family: 'Dosis', sans-serif;
    font-size: var(--h2-font);
    font-weight: 800;
    margin-bottom: 10px;
}

.about-text h5{
    font-size:22px ;
    margin-bottom: 20px;
    line-height: 1.4;
}

span{
    color: var(--main-color);
}

.about-text p{
    color: var(--other-color);
    font-size: var(--p-font);
    margin-bottom: 3rem;
}

.service{
    background: var(--secont-bg-color);
}

.text-center{
    text-align: center;
}

.text-center h2{
    font-family: 'Dosis', sans-serif;
    font-size: var(--h2-font);
    font-weight: 800;
    margin-bottom: 10px;
}

.text-center h4{
    font-size: 22px;
    font-weight: 500;

}

.service-item{
    display: grid;
    grid-template-columns: repeat(auto-fit,minmax(250px,auto));
    align-items: center;
    gap: 2.2rem;
    text-align: center;
    margin-top: 4rem;
}

.service-box{
    padding: 45px 30px;
    background: var(--bg-color);
    border-radius: 0.8rem;
    border: 1px solid transparent;
    cursor: pointer;
    transition: all 0.50s;
}

.service box-icon{

    margin-bottom: 30px;
}

.service h3{
    font-size: 23px;
    font-weight: 700;
    margin-bottom: 12px;
}

.service p{
    color: var(--other-color);
    font-size: var(--p-font);
    line-height: 30px;
    margin-bottom: 1.5rem;
}

.s-btnn{
    display: inline-block;
    padding: 9px 24px;
    background: var(--main-color);
    color: var(--text-color);
    font-size: 15px;
    font-weight: 500;
    border: 2px solid var(--main-color);
    border-radius: 2rem;
    transition: all 0.55s;
}

.s-btnn:hover{
    transform: scale(1.1);
    background: transparent;
    border: 2px solid var(--main-color);
}

.service-box:hover{
    transform: translateY(-8px);
    border: 1px solid;
}

.contact{
    display: grid;
    grid-template-columns: repeat(auto-fit,minmax(250px,auto));
    align-items: center;
    gap: 5rem;
}

.left-contact{
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    gap: 4rem;
    flex-wrap: wrap;
}

.in h4{
    font-size: 27px;
    font-weight: 600;
    letter-spacing: 1px;
}

.right-contact h2{
    font-family: 'Dosis', sans-serif;
    font-size: var(--h2-font);
    font-weight: 800;
    margin-bottom: 5px;
}

.right-contact a{
    display: inline-block;
    color: var(--main-color);
    font-size: 20px;
    font-weight: 600;
    margin-bottom: 20px;
    letter-spacing: 2px;
    border-bottom: 2px solid var(--main-color);
    padding: 3px 0;
    transition: all .40s;
}

.right-contact a:hover{
    transform: translateY(-5px);
    color: var(--text-color);
    border-bottom: 2px solid var(--text-color);
}

.right-contact p{
    color: var(--other-color);

}

.end-section{
    padding: 80px 19% 70px;
    background: var(--secont-bg-color);
    display: flex;
    align-items: center;
    flex-direction: column;
    text-align: center;
}

.end-section h3{
    font-size: 28px;
    font-weight: 700;
    margin-bottom: 10px;
}

.end-section p{
    color: var(--other-color);
    font-size: var(--p-font);
    line-height: 30px;
    margin-bottom: 20px;
}

.scroll-bttn{
    position: fixed;
    right: 2.2rem;
    bottom: 2.2rem;
    color: var(--text-color);
    background: var(--main-color);
    font-size: 23px;
    padding: 9px;
    border-radius: 0.8rem;
}

@media (max-width:1600px) {
    header{
        padding: 14px 4%;
    }
    header.sticky{
        padding: 8px 4%;
    }
    section{
        padding: 100px 5% 80px;
    }
}
@media(max-width:1200px){
    .home{
        min-height: 90vh;
    }
    .navlist a{
        margin: 0 20px;
    }

    :root{
        --h1-font:5rem;
        --h2-font:3.1rem;
        --p-font:1rem;
    }
}

@media(max-width:1060px){
    .about{
        grid-template-columns: 1fr;
    }
    .about-img{
        text-align: center;
        order: 2;
    }
    .about-img img{
        max-width: 100%;
        width: 600px;
        height: auto;
    }
}


@media(max-width:870px){
    box-icon#menu.menu{
        display: block;
    }

    .navlist{
        position: absolute;
        top: -800px;
        right: 0;
        left: 0;
        display: flex;
        flex-direction: column;
        background: #000;
        padding: 20px 0;
        text-align: left;
        transition: all .50s;
    }

    .navlist a{
        display: block;
        font-size: 22px;
        padding: 12px p;
    }

    .navlist.open{
        top:100%
    }

}

@media(max-width:660px){
    .home{
        min-height: 80vh;
    }
    :root{
        --h1-font:3.8rem;
        --h2-font:2.7rem;
        --p-font:15px
    }
    .hero-text h4{
        font-size: 18px;
        word-spacing: 10px;
        margin-bottom: 30px;
    }
    .btn{
        padding: 10px 35px;
    }
}


/* 

Claro, puedo explicarte el código CSS grid-template-columns: repeat(auto-fit, minmax(250px, auto)); paso a paso.

Este código se utiliza en el contexto de CSS Grid, que es una tecnología de diseño de diseño bidimensional. El código en cuestión define la estructura de las columnas de un grid.

grid-template-columns: Este es un atributo de CSS Grid que se utiliza para definir el tamaño y la cantidad de columnas en un grid.

repeat(auto-fit, minmax(250px, auto)): Esta parte es una función de repetición que se aplica a las columnas.

auto-fit: Esto significa que el navegador debe ajustar automáticamente el número de columnas según el tamaño del contenedor. En otras palabras, el grid debería "ajustarse" automáticamente para aprovechar al máximo el espacio disponible.

minmax(250px, auto): Esta es una función que establece un rango para el tamaño de las columnas. En este caso, la columna tendrá al menos 250 píxeles de ancho (min), pero puede crecer automáticamente (max) para ocupar más espacio si está disponible.

Entonces, si el contenedor es lo suficientemente ancho, se crearán tantas columnas como quepan con un ancho mínimo de 250 píxeles cada una. Si el contenedor es más estrecho, el número de columnas disminuirá automáticamente para adaptarse al espacio disponible, pero cada columna seguirá teniendo al menos 250 píxeles de ancho.

En resumen, este código se utiliza para crear un grid de columnas que se ajusta automáticamente al ancho del contenedor, con cada columna teniendo al menos 250 píxeles de ancho. Es una técnica común para diseñar interfaces de usuario responsivas. */